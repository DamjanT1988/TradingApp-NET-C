@using Newtonsoft.Json
<canvas id="capacityChart"></canvas>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    var capacityData = @Html.Raw(JsonConvert.SerializeObject(ViewBag.CapacityData));

    var labels = capacityData.map(item => item.ProductionType);
    var data = capacityData.map(item => item.UnavailableCapacity);

    var ctx = document.getElementById('capacityChart').getContext('2d');
    var capacityChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                label: 'Unavailable Capacity (MW)',
                data: data,
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    function filterByArea() {
        var selectedArea = document.getElementById('areaFilter').value;
        var filteredData = capacityData.filter(item => selectedArea === "All" || item.Area === selectedArea);

        // Update the chart with filtered data
        var newLabels = filteredData.map(item => item.ProductionType);
        var newCapacity = filteredData.map(item => item.UnavailableCapacity);

        capacityChart.data.labels = newLabels;
        capacityChart.data.datasets[0].data = newCapacity;
        capacityChart.update();
    }

</script>

<select id="areaFilter" onchange="filterByArea()">
    <option value="All">All Areas</option>
    <option value="Area1">Area 1</option>
    <option value="Area2">Area 2</option>
</select>
