@using Newtonsoft.Json;
@{
    ViewData["Title"] = "Capacity Chart";
}

<h2>Capacity Chart</h2>

<!-- Display any error messages -->
@if (ViewBag.UMMErrorMessage != null)
{
    <div class="alert alert-danger">
        <strong>UMM API Error:</strong> @ViewBag.UMMErrorMessage
    </div>
}

@if (ViewBag.RSSErrorMessage != null)
{
    <div class="alert alert-danger">
        <strong>RSS Feed Error:</strong> @ViewBag.RSSErrorMessage
    </div>
}

<!-- Canvas elements for two charts: UMM Data and RSS Data -->
<h3>UMM Data Chart</h3>
<canvas id="ummCapacityChart"></canvas>

<h3>RSS Data Chart</h3>
<canvas id="rssCapacityChart"></canvas>

<!-- Chart.js Library -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    // Safely parse the serialized JSON data from ViewBag for UMM and RSS separately
    var ummData = @Html.Raw(ViewBag.UMMDataJson ?? "[]");
    var rssData = @Html.Raw(ViewBag.RSSDataJson ?? "[]");

    // Initialize UMM Chart
    if (ummData.length === 0) {
        alert("No UMM data available to display.");
    } else {
        var ummLabels = ummData.map(item => item.ProductionType);
        var ummCapacity = ummData.map(item => item.UnavailableCapacity);

        var ctxUMM = document.getElementById('ummCapacityChart').getContext('2d');
        var ummCapacityChart = new Chart(ctxUMM, {
            type: 'bar',
            data: {
                labels: ummLabels,
                datasets: [{
                    label: 'UMM Unavailable Capacity (MW)',
                    data: ummCapacity,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }

    // Initialize RSS Chart
    if (rssData.length === 0) {
        alert("No RSS data available to display.");
    } else {
        var rssLabels = rssData.map(item => item.ProductionType);
        var rssCapacity = rssData.map(item => item.UnavailableCapacity);

        var ctxRSS = document.getElementById('rssCapacityChart').getContext('2d');
        var rssCapacityChart = new Chart(ctxRSS, {
            type: 'bar',
            data: {
                labels: rssLabels,
                datasets: [{
                    label: 'RSS Unavailable Capacity (MW)',
                    data: rssCapacity,
                    backgroundColor: 'rgba(153, 102, 255, 0.2)',
                    borderColor: 'rgba(153, 102, 255, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }
</script>
